{"version":3,"file":"NativeTabsView.js","sourceRoot":"","sources":["../../../src/ui/NativeBottomTabs/NativeTabsView.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from 'expo-modules-core';\nimport React from 'react';\nimport { BottomTabs, BottomTabsScreen, enableFreeze, featureFlags } from 'react-native-screens';\n\n// import { useBottomTabAccessory } from './NativeTabsViewContext';\nimport { TabInfoContext } from './TabInfoContext';\nimport type { NativeTabsViewProps } from './types';\n\nconst isControlledMode = Platform.OS === 'android';\nfeatureFlags.experiment.controlledBottomTabs = isControlledMode;\n\nenableFreeze(false);\n\nexport function NativeTabsView(props: NativeTabsViewProps) {\n  const { builder, style } = props;\n  const { state, descriptors, navigation } = builder;\n  const { routes } = state;\n  // const { bottomTabAccessory } = useBottomTabAccessory();\n\n  // const focusedScreenKey = state.routes[state.index].key;\n\n  console.log(\n    routes.map((route) => ({\n      key: route.key,\n      name: route.name,\n      options: descriptors[route.key].options,\n    }))\n  );\n\n  const children = routes\n    .map((route, index) => ({ route, index }))\n    .filter(({ route: { key } }) => !descriptors[key].options.hidden)\n    .map(({ route, index }) => {\n      const descriptor = descriptors[route.key];\n      const isFocused = state.index === index;\n\n      return (\n        <TabInfoContext value={{ tabKey: route.key }} key={route.key}>\n          <BottomTabsScreen\n            {...descriptor.options}\n            tabKey={route.key}\n            isFocused={isFocused}\n            onWillAppear={() => {\n              console.log('On will appear', route.name);\n              if (!isControlledMode) {\n                navigation.dispatch({\n                  type: 'JUMP_TO',\n                  target: state.key,\n                  payload: {\n                    name: route.name,\n                  },\n                });\n              }\n            }}>\n            {descriptor.render()}\n          </BottomTabsScreen>\n        </TabInfoContext>\n      );\n    });\n\n  return (\n    <BottomTabs\n      tabBarItemTitleFontColor={style?.color}\n      tabBarItemTitleFontFamily={style?.fontFamily}\n      tabBarItemTitleFontSize={style?.fontSize}\n      tabBarItemTitleFontWeight={style?.fontWeight}\n      tabBarItemTitleFontStyle={style?.fontStyle}\n      tabBarBackgroundColor={style?.backgroundColor}\n      tabBarBlurEffect={style?.blurEffect}\n      tabBarTintColor={style?.tintColor}\n      tabBarItemBadgeBackgroundColor={style?.badgeBackgroundColor}\n      onNativeFocusChange={({ nativeEvent: { tabKey } }) => {\n        console.log('onNativeFocusChange', tabKey);\n        if (isControlledMode) {\n          const descriptor = descriptors[tabKey];\n          const route = descriptor.route;\n          navigation.dispatch({\n            type: 'JUMP_TO',\n            target: state.key,\n            payload: {\n              name: route.name,\n            },\n          });\n        }\n        // navigation.emit({ type: 'tabPress', target: tabKey });\n      }}>\n      {children}\n      {/* {focusedTabAccessoryProps && (\n        <BottomAccessory\n          {...focusedTabAccessoryProps}\n          onTabAccessoryEnvironmentChange={({ nativeEvent }) => {\n            console.log('onTabAccessoryEnvironmentChange', nativeEvent);\n          }}\n        />\n      )} */}\n    </BottomTabs>\n  );\n}\n"]}