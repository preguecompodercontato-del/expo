{"version":3,"file":"useNextScreenId.js","sourceRoot":"","sources":["../../../src/link/preview/useNextScreenId.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ParamListBase,\n  StackNavigationState,\n  type NavigationRoute,\n  type NavigationState,\n  type TabNavigationState,\n} from '@react-navigation/native';\nimport { useCallback, useState } from 'react';\n\nimport { store, type ReactNavigationState } from '../../global-state/router-store';\nimport { findDivergentState, getPayloadFromStateRoute } from '../../global-state/routing';\nimport { Href } from '../../types';\nimport { resolveHref } from '../href';\nimport { TabPath } from './native';\n\nexport function useNextScreenId(): [\n  { internalNextScreenId: string | undefined; tabPath: TabPath[] },\n  (href: Href) => void,\n] {\n  const [internalNextScreenId, internalSetNextScreenId] = useState<string | undefined>();\n  const [tabPath, setTabPath] = useState<TabPath[]>([]);\n  const setNextScreenId = useCallback((href: Href): void => {\n    console.log('>>>>>>>>> Setting next screen id for', href);\n    const preloadedRoute = getPreloadedRouteFromRootStateByHref(href);\n    const routeKey = preloadedRoute?.key;\n    internalSetNextScreenId(routeKey);\n    const tabPathFromRootState = getTabPathFromRootStateByHref(href);\n    setTabPath(tabPathFromRootState);\n    console.log('preloadedRoute', preloadedRoute);\n    console.log('tabPathFromRootState', tabPathFromRootState);\n  }, []);\n  return [{ internalNextScreenId, tabPath }, setNextScreenId];\n}\n\nfunction getTabPathFromRootStateByHref(href: Href): TabPath[] {\n  const rootState = store.state;\n  const hrefState = store.getStateForHref(resolveHref(href));\n  const state: ReactNavigationState | undefined = rootState;\n  if (!hrefState || !state) {\n    return [];\n  }\n  // Replicating the logic from `linkTo`\n  const { navigationRoutes } = findDivergentState(hrefState, state as NavigationState, 'PRELOAD');\n\n  if (!navigationRoutes.length) {\n    return [];\n  }\n\n  const tabPath: TabPath[] = [];\n  navigationRoutes.forEach((route, i, arr) => {\n    if (route.state?.type === 'tab') {\n      const tabState = route.state as TabNavigationState<ParamListBase>;\n      const oldTabKey = tabState.routes[tabState.index].key;\n      if (!arr[i + 1]) {\n        throw new Error(\n          `New tab route is missing for ${route.key}. This is likely an internal Expo Router bug.`\n        );\n      }\n      const newTabKey = arr[i + 1].key;\n      tabPath.push({ oldTabKey, newTabKey });\n    }\n  });\n  console.log(tabPath, 'tabPath');\n  return tabPath;\n}\n\nfunction getPreloadedRouteFromRootStateByHref(\n  href: Href\n): NavigationRoute<ParamListBase, string> | undefined {\n  const rootState = store.state;\n  const hrefState = store.getStateForHref(resolveHref(href));\n  const state: ReactNavigationState | undefined = rootState;\n  if (!hrefState || !state) {\n    return undefined;\n  }\n  // Replicating the logic from `linkTo`\n  const { navigationState, actionStateRoute } = findDivergentState(\n    hrefState,\n    state as NavigationState,\n    'PRELOAD'\n  );\n\n  if (!navigationState || !actionStateRoute) {\n    return undefined;\n  }\n\n  if (navigationState.type === 'stack') {\n    const stackState = navigationState as StackNavigationState<ParamListBase>;\n    const payload = getPayloadFromStateRoute(actionStateRoute);\n\n    const preloadedRoute = stackState.preloadedRoutes.find(\n      (route) => route.name === actionStateRoute.name && deepEqual(route.params, payload.params)\n    );\n    return preloadedRoute;\n  }\n\n  return undefined;\n}\n\nfunction deepEqual(\n  a: { [key: string]: any } | undefined,\n  b: { [key: string]: any } | undefined\n): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (a == null || b == null) {\n    return false;\n  }\n  if (typeof a !== 'object' || typeof b !== 'object') {\n    return false;\n  }\n  return (\n    Object.keys(a).length === Object.keys(b).length &&\n    Object.keys(a).every((key) => deepEqual(a[key], b[key]))\n  );\n}\n"]}